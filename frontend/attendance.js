// ====================== CH·∫§M C√îNG ======================

// T√≠nh s·ªë gi·ªù l√†m (h·ªó tr·ª£ ca ƒë√™m)
function tinhSoGio(row) {
  const vao = row.querySelector(".gio-vao").value;
  const ra = row.querySelector(".gio-ra").value;
  const regex = /^([01]\d|2[0-3]):[0-5]\d$/;

  if (regex.test(vao) && regex.test(ra)) {
    const [hv, mv] = vao.split(":").map(Number);
    const [hr, mr] = ra.split(":").map(Number);
    let start = hv * 60 + mv;
    let end = hr * 60 + mr;
    if (end < start) end += 24 * 60; // ca ƒë√™m
    const diff = (end - start) / 60;
    row.querySelector(".so-gio").textContent = diff.toFixed(2);
  } else {
    row.querySelector(".so-gio").textContent = "0.00";
  }
}

// T·ª± ƒë·ªông t√≠nh gi·ªù khi nh·∫≠p
document.addEventListener("input", (e) => {
  if (e.target.classList.contains("gio-vao") || e.target.classList.contains("gio-ra")) {
    tinhSoGio(e.target.closest("tr"));
  }
});

// Khi ch·ªçn ng√†y ch·∫•m c√¥ng ‚Üí hi·ªÉn th·ªã danh s√°ch nh√¢n vi√™n (s·∫Øp A-Z, hi·ªÉn th·ªã ID)
document.getElementById("chamCongDate").addEventListener("change", async () => {
  const date = document.getElementById("chamCongDate").value;
  const tbody = document.querySelector("#employeeTable tbody");

  if (!date) {
    tbody.innerHTML = `<tr><td colspan="5" class="text-muted">Vui l√≤ng ch·ªçn ng√†y ch·∫•m c√¥ng ƒë·ªÉ xem danh s√°ch nh√¢n vi√™n.</td></tr>`;
    return;
  }

  const res = await fetch("http://localhost:3000/api/chamcong/nhanvien/all");
  let data = await res.json();

  if (data.length === 0) {
    tbody.innerHTML = `<tr><td colspan="5" class="text-muted">Kh√¥ng c√≥ nh√¢n vi√™n n√†o trong h·ªá th·ªëng.</td></tr>`;
    return;
  }

  // üîπ S·∫Øp x·∫øp theo t√™n A ‚Üí Z
  data.sort((a, b) => a.ho_ten.localeCompare(b.ho_ten, "vi", { sensitivity: "base" }));

  // üîπ Hi·ªÉn th·ªã ID ·ªü c·ªôt ƒë·∫ßu ti√™n
  tbody.innerHTML = data
    .map(
      (nv) => `
      <tr data-id="${nv.id}">
        <td>${nv.id}</td>
        <td>${nv.ho_ten}</td>
        <td><input type="text" class="form-control gio-vao" placeholder="HH:MM" pattern="^([01]\\d|2[0-3]):[0-5]\\d$"></td>
        <td><input type="text" class="form-control gio-ra" placeholder="HH:MM" pattern="^([01]\\d|2[0-3]):[0-5]\\d$"></td>
        <td class="so-gio">0.00</td>
        <td>
          <select class="form-select ghi-chu">
            <option value="">-- Ch·ªçn --</option>
            <option value="ƒêi mu·ªôn">ƒêi mu·ªôn</option>
            <option value="Ngh·ªâ ph√©p">Ngh·ªâ ph√©p</option>
            <option value="Kh√¥ng ph√©p">Kh√¥ng ph√©p</option>
          </select>
        </td>
      </tr>`
    )
    .join("");
});

// L∆∞u ch·∫•m c√¥ng
document.getElementById("saveAttendance").addEventListener("click", async () => {
  const ngay = document.getElementById("chamCongDate").value;
  if (!ngay) return alert("‚ö†Ô∏è Vui l√≤ng ch·ªçn ng√†y ch·∫•m c√¥ng!");

  const rows = document.querySelectorAll("#employeeTable tbody tr");
  let count = 0;

  for (const row of rows) {
    const id = row.dataset.id;
    const gio_vao = row.querySelector(".gio-vao").value;
    const gio_ra = row.querySelector(".gio-ra").value;
    const so_gio = row.querySelector(".so-gio").textContent;
    const ghi_chu = row.querySelector(".ghi-chu").value; 
    const regex = /^([01]\d|2[0-3]):[0-5]\d$/;

    if (!regex.test(gio_vao) || !regex.test(gio_ra)) continue;

  const res = await fetch("http://localhost:3000/api/chamcong", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({
    nhan_vien_id: id,
    ngay,
    gio_vao,
    gio_ra,
    ghi_chu,
    so_gio_lam: so_gio,
  }),
});

if (!res.ok) {
  const errData = await res.json();
  console.warn(`‚ö†Ô∏è L·ªói ch·∫•m c√¥ng nh√¢n vi√™n ID ${id}:`, errData.message);
  alert(`‚ùå L·ªói ch·∫•m c√¥ng nh√¢n vi√™n ID ${id}: ${errData.message}`);
  continue; // b·ªè qua kh√¥ng tƒÉng count, kh√¥ng l∆∞u ti·∫øp
}

count++;

  }

  alert(`‚úÖ ƒê√£ l∆∞u ${count} b·∫£n ghi ch·∫•m c√¥ng cho ng√†y ${ngay}`);
});

// ====================== XEM B·∫¢NG CH·∫§M C√îNG ======================

// Chuy·ªÉn gi·ªØa 2 ch·∫ø ƒë·ªô
document.getElementById("btnChamCong").addEventListener("click", () => {
  document.getElementById("chamCongSection").style.display = "block";
  document.getElementById("xemBangSection").style.display = "none";
});

document.getElementById("btnXemBang").addEventListener("click", () => {
  document.getElementById("chamCongSection").style.display = "none";
  document.getElementById("xemBangSection").style.display = "block";
});

// L·ªçc b·∫£ng ch·∫•m c√¥ng
document.getElementById("btnFilter").addEventListener("click", async () => {
  const month = document.getElementById("filterMonth").value;
  const year = document.getElementById("filterYear").value;
  const nhanvien = document.getElementById("filterNhanVien").value;

  const params = new URLSearchParams();
  if (month) params.append("month", month);
  if (year) params.append("year", year);
  if (nhanvien) params.append("nhanvien", nhanvien);

  const res = await fetch(`http://localhost:3000/api/chamcong/filter?${params.toString()}`);
  const data = await res.json();

  const tbody = document.getElementById("bangChamCongBody");
  if (data.length === 0) {
    tbody.innerHTML = `<tr><td colspan="6" class="text-muted">Kh√¥ng c√≥ d·ªØ li·ªáu ph√π h·ª£p</td></tr>`;
    return;
  }

  tbody.innerHTML = data
    .map(
      (cc) => `
      <tr>
        <td>${new Date(cc.ngay).toLocaleDateString("vi-VN")}</td>
        <td>${cc.ho_ten}</td>
        <td>${cc.gio_vao}</td>
        <td>${cc.gio_ra}</td>
        <td>${cc.so_gio_lam}</td>
        <td>${cc.ghi_chu || ""}</td>
        <td>
          <button class="btn btn-warning btn-sm" onclick="editChamCong(${cc.id})">‚úèÔ∏è S·ª≠a</button>
          <button class="btn btn-danger btn-sm" onclick="deleteChamCong(${cc.id})">üóëÔ∏è X√≥a</button>
        </td>
      </tr>`
    )
    .join("");
});



// ‚úèÔ∏è S·ª≠a ch·∫•m c√¥ng v·ªõi modal
async function editChamCong(id) {
  try {
    const res = await fetch(`http://localhost:3000/api/chamcong/${id}`);
    const cc = await res.json();

    // G√°n d·ªØ li·ªáu v√†o form popup
    document.getElementById("editGioVao").value = cc.gio_vao;
    document.getElementById("editGioRa").value = cc.gio_ra;
    document.getElementById("editGhiChu").value = cc.ghi_chu || "";

    // Hi·ªÉn th·ªã modal
    const modal = document.getElementById("editModal");
    modal.style.display = "flex";

    // Khi b·∫•m "L∆∞u"
    document.getElementById("saveEdit").onclick = async () => {
      const gioVao = document.getElementById("editGioVao").value;
      const gioRa = document.getElementById("editGioRa").value;
      const ghiChu = document.getElementById("editGhiChu").value;

      if (!gioVao || !gioRa) return alert("‚ö†Ô∏è Gi·ªù v√†o/ra kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");

      const body = {
        nhan_vien_id: cc.nhan_vien_id,
        ngay: cc.ngay.split("T")[0],
        gio_vao: gioVao,
        gio_ra: gioRa,
        ghi_chu: ghiChu,
        so_gio_lam:
          ((new Date(`1970-01-01T${gioRa}:00`) - new Date(`1970-01-01T${gioVao}:00`)) / 3600000).toFixed(2),
      };

      const updateRes = await fetch(`http://localhost:3000/api/chamcong/${id}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(body),
      });

      if (!updateRes.ok) {
        const err = await updateRes.json();
        return alert(err.message || "‚ùå L·ªói khi c·∫≠p nh·∫≠t!");
      }

      alert("‚úÖ C·∫≠p nh·∫≠t ch·∫•m c√¥ng th√†nh c√¥ng!");
      modal.style.display = "none";
      document.getElementById("btnFilter").click(); // Reload b·∫£ng
    };

    // Khi b·∫•m "Hu·ª∑"
    // Khi b·∫•m "Hu·ª∑"
      document.getElementById("cancelEdit").onclick = () => {
  const modal = document.getElementById("editModal");
  modal.style.display = "none"; // ƒê√≥ng popup
  document.getElementById("saveEdit").onclick = null; // Ng·∫Øt s·ª± ki·ªán c≈© ƒë·ªÉ tr√°nh xung ƒë·ªôt
};

  } catch (err) {
    console.error("‚ùå L·ªói s·ª≠a ch·∫•m c√¥ng:", err);
  }
}



// ====================== H√ÄNH ƒê·ªòNG: S·ª¨A / X√ìA CH·∫§M C√îNG ======================

// ‚úèÔ∏è S·ª≠a ch·∫•m c√¥ng
async function editChamCong(id) {
  try {
    const res = await fetch(`http://localhost:3000/api/chamcong/${id}`);
    const cc = await res.json();

    // Hi·ªÉn th·ªã d·ªØ li·ªáu ra prompt ƒë·ªÉ s·ª≠a nhanh (ho·∫∑c b·∫°n c√≥ th·ªÉ m·ªü modal)
    const gioVao = prompt("Nh·∫≠p gi·ªù v√†o m·ªõi (HH:MM)", cc.gio_vao);
    const gioRa = prompt("Nh·∫≠p gi·ªù ra m·ªõi (HH:MM)", cc.gio_ra);
    const ghiChu = prompt("Ghi ch√∫", cc.ghi_chu || "");

    if (!gioVao || !gioRa) return alert("‚ö†Ô∏è Gi·ªù v√†o/ra kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");

    const body = {
      nhan_vien_id: cc.nhan_vien_id,
      ngay: cc.ngay.split("T")[0],
      gio_vao: gioVao,
      gio_ra: gioRa,
    ghi_chu: document.getElementById("ghi_chu").value || null,  
      so_gio_lam:
        ((new Date(`1970-01-01T${gioRa}:00`) - new Date(`1970-01-01T${gioVao}:00`)) / 3600000).toFixed(2),
    };

    const updateRes = await fetch(`http://localhost:3000/api/chamcong/${id}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(body),
    });

    if (!updateRes.ok) {
      const err = await updateRes.json();
      return alert(err.message || "‚ùå L·ªói khi c·∫≠p nh·∫≠t!");
    }

    alert("‚úÖ C·∫≠p nh·∫≠t ch·∫•m c√¥ng th√†nh c√¥ng!");
    document.getElementById("btnFilter").click(); // reload b·∫£ng
  } catch (err) {
    console.error("‚ùå L·ªói s·ª≠a ch·∫•m c√¥ng:", err);
  }
}

// üóëÔ∏è X√≥a ch·∫•m c√¥ng
async function deleteChamCong(id) {
  if (!confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b·∫£n ghi ch·∫•m c√¥ng n√†y kh√¥ng?")) return;

  try {
    const res = await fetch(`http://localhost:3000/api/chamcong/${id}`, { method: "DELETE" });
    const data = await res.json();

    if (!res.ok) return alert(data.message || "‚ùå L·ªói khi x√≥a ch·∫•m c√¥ng!");

    alert("‚úÖ X√≥a th√†nh c√¥ng!");
    document.getElementById("btnFilter").click(); // reload l·∫°i b·∫£ng
  } catch (err) {
    console.error("‚ùå L·ªói x√≥a ch·∫•m c√¥ng:", err);
  }
}
