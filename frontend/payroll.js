const API_NV = "http://localhost:3000/api/chamcong/nhanvien/all";
const API_LUONG = "http://localhost:3000/api/bangluong/tinhluong";
const API_SAVE = "http://localhost:3000/api/bangluong/save";

// --- LOGIC CH·ªàNH S·ª¨A V√Ä L∆ØU ---

function calculateTotal(data) {
  // T√≠nh l·∫°i t·ªïng l∆∞∆°ng d·ª±a tr√™n c√°c tr∆∞·ªùng c√≥ th·ªÉ ch·ªânh s·ª≠a
  const luongCoBan = data.luong_co_ban || 0;
  const thuong = parseFloat(data.thuong) || 0;
  const phat = parseFloat(data.phat) || 0;
  
  // L∆∞∆°ng th√°ng 13 (gi·∫£ s·ª≠ luong_thu_13 = luong_co_ban n·∫øu th√°ng l√† 12)
  const luongThu13 = data.thang_thu == 12 ? luongCoBan : 0; 
  
  return luongCoBan + luongThu13 + thuong - phat;
}

function saveEdit(btn, nvId) {
  const row = btn.closest("tr");
  const data = window.luongData.find(item => item.nhan_vien_id == nvId);

  if (!data) return alert("L·ªói: Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu nh√¢n vi√™n.");

  // L·∫•y gi√° tr·ªã ƒë√£ ch·ªânh s·ª≠a
  const newThuong = row.querySelector("input[name='thuong']").value.replace(/[^0-9]/g, '');
  const newPhat = row.querySelector("input[name='phat']").value.replace(/[^0-9]/g, '');
  const newTrangThai = row.querySelector("select[name='trang_thai']").value;

  // C·∫≠p nh·∫≠t v√†o data object
  data.thuong = parseInt(newThuong) || 0;
  data.phat = parseInt(newPhat) || 0;
  data.trang_thai = newTrangThai;
  
  // T√≠nh l·∫°i t·ªïng l∆∞∆°ng
  data.tong_luong = calculateTotal(data);

  // C·∫≠p nh·∫≠t l·∫°i giao di·ªán (g·ªçi l·∫°i toggleEdit ƒë·ªÉ chuy·ªÉn sang ch·∫ø ƒë·ªô xem)
  toggleEdit(btn); 
}

function toggleEdit(btn) {
  const row = btn.closest("tr");
  const nvId = row.querySelector("td:nth-child(2)").textContent; // ID l√† c·ªôt th·ª© 2
  const data = window.luongData.find(item => item.nhan_vien_id == nvId);

  if (!data) return;

  const isEditing = btn.textContent.includes("L∆∞u");

  if (isEditing) {
    // CHUY·ªÇN SANG CH·∫æ ƒê·ªò XEM
    btn.textContent = "‚úèÔ∏è Ch·ªânh s·ª≠a";
    btn.classList.remove("btn-success");
    btn.classList.add("btn-warning");
    btn.onclick = () => toggleEdit(btn);

    // C·∫≠p nh·∫≠t l·∫°i gi√° tr·ªã hi·ªÉn th·ªã sau khi ƒë√£ t√≠nh to√°n v√† l∆∞u trong saveEdit
    row.querySelector("td:nth-child(7)").innerHTML = data.thuong.toLocaleString() + " ‚Ç´";
    row.querySelector("td:nth-child(8)").innerHTML = data.phat.toLocaleString() + " ‚Ç´";
    row.querySelector("td:nth-child(9) strong").textContent = data.tong_luong.toLocaleString() + " ‚Ç´";
    row.querySelector("td:nth-child(10) .badge").textContent = data.trang_thai;

    // ƒê·∫∑t l·∫°i thu·ªôc t√≠nh contenteditable v·ªÅ false cho c√°c √¥ kh√¥ng ph·∫£i Th∆∞·ªüng/Ph·∫°t/Tr·∫°ng th√°i
    row.querySelectorAll("td").forEach((cell, index) => {
      if (![6, 7, 9].includes(index)) { // C·ªôt Th∆∞·ªüng (6), Ph·∫°t (7), Tr·∫°ng th√°i (9)
         cell.classList.remove("bg-light"); // X√≥a highlight
      }
    });

  } else {
    // CHUY·ªÇN SANG CH·∫æ ƒê·ªò CH·ªàNH S·ª¨A
    btn.textContent = "‚úÖ L∆∞u";
    btn.classList.remove("btn-warning");
    btn.classList.add("btn-success");
    btn.onclick = () => saveEdit(btn, nvId); // G√°n s·ª± ki·ªán l∆∞u

    // Chuy·ªÉn ƒë·ªïi c√°c c·ªôt c√≥ th·ªÉ ch·ªânh s·ª≠a th√†nh input/select
    
    // C·ªôt Th∆∞·ªüng (C·ªôt th·ª© 7)
    const thuongCell = row.querySelector("td:nth-child(7)");
    thuongCell.innerHTML = `<input type="number" name="thuong" class="form-control form-control-sm" value="${data.thuong}" min="0" style="width: 100px;">`;
    thuongCell.classList.add("bg-light");

    // C·ªôt Ph·∫°t (C·ªôt th·ª© 8)
    const phatCell = row.querySelector("td:nth-child(8)");
    phatCell.innerHTML = `<input type="number" name="phat" class="form-control form-control-sm" value="${data.phat}" min="0" style="width: 100px;">`;
    phatCell.classList.add("bg-light");
    
    // C·ªôt Tr·∫°ng th√°i (C·ªôt th·ª© 10)
    const trangThaiCell = row.querySelector("td:nth-child(10)");
    trangThaiCell.innerHTML = `
        <select name="trang_thai" class="form-select form-select-sm">
            <option value="Ch∆∞a tr·∫£" ${data.trang_thai === 'Ch∆∞a tr·∫£' ? 'selected' : ''}>Ch∆∞a tr·∫£</option>
            <option value="ƒê√£ tr·∫£" ${data.trang_thai === 'ƒê√£ tr·∫£' ? 'selected' : ''}>ƒê√£ tr·∫£</option>
        </select>`;
    trangThaiCell.classList.add("bg-light");
  }
}

// --- LOGIC T√çNH L∆Ø∆†NG ---

document.getElementById("btnTinh").addEventListener("click", async () => {
  const thang = document.getElementById("thang").value;
  const nvInput = document.getElementById("nhanvien").value.trim();

  if (!thang) return alert("Vui l√≤ng ch·ªçn th√°ng!");

  document.getElementById("labelThang").textContent = thang;
  document.getElementById("ketqua").classList.remove("d-none");

  const tbody = document.getElementById("bangLuong");
  tbody.innerHTML = "";
  window.luongData = [];

  try {
    let danhSachNV = [];

    // üß≠ N·∫øu ng∆∞·ªùi d√πng nh·∫≠p ID ho·∫∑c t√™n
    if (nvInput) {
      const resNV = await fetch(API_NV);
      const allNV = await resNV.json();

      const found = allNV.find(
        (nv) =>
          nv.id == nvInput ||
          nv.ho_ten.toLowerCase().includes(nvInput.toLowerCase())
      );

      if (!found) return alert("Kh√¥ng t√¨m th·∫•y nh√¢n vi√™n!");
      danhSachNV = [found];
    } else {
      // N·∫øu ƒë·ªÉ tr·ªëng ‚Üí l·∫•y t·∫•t c·∫£
      const resNV = await fetch(API_NV);
      danhSachNV = await resNV.json();
    }

    // üîÅ T√≠nh l∆∞∆°ng cho t·ª´ng nh√¢n vi√™n
    for (const nv of danhSachNV) {
      const res = await fetch(`${API_LUONG}?thang=${thang}&nhanvien=${nv.id}`);

      // ‚úÖ ƒê√£ s·ª≠a: Ki·ªÉm tra res.ok tr∆∞·ªõc khi g·ªçi res.json()
      if (!res.ok) {
        // B·ªè qua n·∫øu c√≥ l·ªói (v√≠ d·ª•: 404 - Kh√¥ng c√≥ d·ªØ li·ªáu ch·∫•m c√¥ng)
        continue;
      }
      
      const data = await res.json();
      
      // G√°n th√™m luong_co_ban v√†o data ƒë·ªÉ t√≠nh to√°n l·∫°i sau n√†y
      // Gi·∫£ s·ª≠ luong_co_ban ƒë∆∞·ª£c tr·∫£ v·ªÅ t·ª´ API t√≠nh l∆∞∆°ng
      if (!data.luong_co_ban) {
         // N·∫øu API kh√¥ng tr·∫£ v·ªÅ, c·∫ßn b·ªï sung logic ƒë·ªÉ l·∫•y t·ª´ NV ho·∫∑c gi·∫£ ƒë·ªãnh.
         // T·∫°m th·ªùi s·ª≠ d·ª•ng m·ªôt gi√° tr·ªã placeholder n·∫øu kh√¥ng c√≥
         data.luong_co_ban = 0; 
      }
      
      // Th√™m n√∫t ch·ªânh s·ª≠a v√†o h√†ng
      const editButton = `<button class="btn btn-warning btn-sm" onclick="toggleEdit(this)">‚úèÔ∏è Ch·ªânh s·ª≠a</button>`;

      const row = `
        <tr>
          <td>${editButton}</td> <td>${data.nhan_vien_id}</td>
          <td>${data.ten}</td>
          <td>${data.thang}</td>
          <td>${data.thang_thu}</td>
          <td>${data.tong_gio_lam}</td>
          <td>${data.thuong.toLocaleString()} ‚Ç´</td>
          <td>${data.phat.toLocaleString()} ‚Ç´</td>
          <td><strong>${data.tong_luong.toLocaleString()} ‚Ç´</strong></td>
          <td><span class="badge bg-secondary">${data.trang_thai}</span></td>
        </tr>
      `;
      tbody.insertAdjacentHTML("beforeend", row);
      window.luongData.push(data);
    }

    if (window.luongData.length === 0)
      alert("Kh√¥ng c√≥ d·ªØ li·ªáu ch·∫•m c√¥ng cho th√°ng n√†y!");
  } catch (err) {
    console.error(err);
    alert("L·ªói khi t√≠nh l∆∞∆°ng!");
  }
});

// üíæ L∆∞u to√†n b·ªô b·∫£ng l∆∞∆°ng v√†o DB
document.getElementById("btnLuuAll").addEventListener("click", async () => {
  if (!window.luongData || window.luongData.length === 0)
    return alert("Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ l∆∞u!");

  try {
    for (const luong of window.luongData) {
      const payload = {
          nhan_vien_id: luong.nhan_vien_id,
          thang: luong.thang, 
          thang_thu: luong.thang_thu, 
          tong_gio_lam: luong.tong_gio_lam,
          thuong: luong.thuong,
          phat: luong.phat,
          tong_luong: luong.tong_luong,
          trang_thai: luong.trang_thai
      };
      
      const response = await fetch(API_SAVE, { 
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload),
      });

      const result = await response.json();
      console.log(`L∆∞u NV ID ${luong.nhan_vien_id}: ${result.action}`);
    }
    alert("‚úÖ L∆∞u to√†n b·ªô b·∫£ng l∆∞∆°ng th√†nh c√¥ng!");
    
    document.getElementById("bangLuong").innerHTML = "";
    document.getElementById("ketqua").classList.add("d-none");

  } catch (err) {
    console.error(err);
    alert("‚ùå L·ªói khi l∆∞u b·∫£ng l∆∞∆°ng!");
  }
});